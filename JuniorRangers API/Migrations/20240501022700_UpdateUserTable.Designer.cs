// <auto-generated />
using System;
using JuniorRangers_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JuniorRangers_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240501022700_UpdateUserTable")]
    partial class UpdateUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JuniorRangers_API.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"), 1L, 1);

                    b.Property<DateTime>("DateAwarded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AchievementId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"), 1L, 1);

                    b.Property<int>("ClassroomClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlbumId");

                    b.HasIndex("ClassroomClassId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"), 1L, 1);

                    b.Property<int>("ClassroomClassId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.HasIndex("ClassroomClassId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Classroom", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"), 1L, 1);

                    b.Property<string>("JoinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageID"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("MessageID");

                    b.HasIndex("ClassId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PictureId"), 1L, 1);

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploaderUserId")
                        .HasColumnType("int");

                    b.HasKey("PictureId");

                    b.HasIndex("AlbumId");

                    b.HasIndex("PostId");

                    b.HasIndex("UploaderUserId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<int>("ClassroomClassId")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PosterUserId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("ClassroomClassId");

                    b.HasIndex("PosterUserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int?>("ClassroomClassId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("ClassroomClassId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.UserAchievement", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Album", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Classroom", "Classroom")
                        .WithMany("Albums")
                        .HasForeignKey("ClassroomClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Book", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Classroom", "Classroom")
                        .WithMany("Books")
                        .HasForeignKey("ClassroomClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Message", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Classroom", "Classroom")
                        .WithMany("Messages")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JuniorRangers_API.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId");

                    b.Navigation("Classroom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Picture", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Album", "Album")
                        .WithMany("Pictures")
                        .HasForeignKey("AlbumId");

                    b.HasOne("JuniorRangers_API.Models.Post", "Post")
                        .WithMany("Pictures")
                        .HasForeignKey("PostId");

                    b.HasOne("JuniorRangers_API.Models.User", "Uploader")
                        .WithMany("Picures")
                        .HasForeignKey("UploaderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Post");

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Post", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Classroom", "Classroom")
                        .WithMany("Posts")
                        .HasForeignKey("ClassroomClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JuniorRangers_API.Models.User", "Poster")
                        .WithMany("Posts")
                        .HasForeignKey("PosterUserId");

                    b.Navigation("Classroom");

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.User", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Classroom", "Classroom")
                        .WithMany("Users")
                        .HasForeignKey("ClassroomClassId");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.UserAchievement", b =>
                {
                    b.HasOne("JuniorRangers_API.Models.Achievement", "Achievement")
                        .WithMany("UserAchievement")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JuniorRangers_API.Models.User", "User")
                        .WithMany("UserAchievement")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Achievement", b =>
                {
                    b.Navigation("UserAchievement");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Album", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Classroom", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Books");

                    b.Navigation("Messages");

                    b.Navigation("Posts");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.Post", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("JuniorRangers_API.Models.User", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Picures");

                    b.Navigation("Posts");

                    b.Navigation("UserAchievement");
                });
#pragma warning restore 612, 618
        }
    }
}
